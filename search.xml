<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mysql</title>
      <link href="/2023/09/11/mysql/"/>
      <url>/2023/09/11/mysql/</url>
      
        <content type="html"><![CDATA[<h3 id="行转列"><a href="#行转列" class="headerlink" title="行转列"></a>行转列</h3><h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><p>表名 student 字段 name,age<br>现有数据十条</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>A</td><td>10</td></tr><tr><td>B</td><td>11</td></tr><tr><td>C</td><td>12</td></tr><tr><td>D</td><td>13</td></tr><tr><td>E</td><td>14</td></tr><tr><td>F</td><td>15</td></tr><tr><td>G</td><td>16</td></tr><tr><td>H</td><td>17</td></tr><tr><td>I</td><td>18</td></tr><tr><td>J</td><td>19</td></tr></tbody></table><p>最终呈现效果</p><table><thead><tr><th>name</th><th>age</th><th>name1</th><th>age1</th></tr></thead><tbody><tr><td>J</td><td>19</td><td>E</td><td>14</td></tr><tr><td>I</td><td>18</td><td>D</td><td>13</td></tr><tr><td>H</td><td>17</td><td>C</td><td>12</td></tr><tr><td>G</td><td>16</td><td>B</td><td>11</td></tr><tr><td>F</td><td>15</td><td>A</td><td>10</td></tr></tbody></table><p>代码展示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&lt;</span> <span class="hljs-number">6</span> <span class="hljs-keyword">THEN</span> c.`name` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `name`,<br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&lt;</span> <span class="hljs-number">6</span> <span class="hljs-keyword">THEN</span> c.`age` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `age`,<br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&gt;</span> <span class="hljs-number">5</span> <span class="hljs-keyword">THEN</span> c.`name` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `name1`,<br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&gt;</span> <span class="hljs-number">5</span> <span class="hljs-keyword">THEN</span> c.`age` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `age1` <br><span class="hljs-keyword">FROM</span><br>(<br><span class="hljs-keyword">SELECT</span><br>a.`name`,<br>a.`age`,<br>( <span class="hljs-variable">@rownum</span> :<span class="hljs-operator">=</span> <span class="hljs-variable">@rownum</span> <span class="hljs-operator">+</span> <span class="hljs-number">1</span> ) rw,<br>( <span class="hljs-variable">@rownum</span> <span class="hljs-operator">%</span> <span class="hljs-number">5</span> ) rn <br><span class="hljs-keyword">FROM</span><br>( <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student a <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> age <span class="hljs-keyword">DESC</span> LIMIT <span class="hljs-number">10</span> ) a,<br>( <span class="hljs-keyword">SELECT</span> <span class="hljs-variable">@rownum</span> :<span class="hljs-operator">=</span> <span class="hljs-number">0</span> ) b <br>) c <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span><br>c.rn <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span><br>c.rw<br></code></pre></td></tr></table></figure><p><img src="/images/mysql/image-20230912112554648.png" alt="image-20230912112554648"></p><p><img src="/images/mysql/image-20230912112604334.png" alt="image-20230912112604334"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MallChat</title>
      <link href="/2023/08/29/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/MallChat/"/>
      <url>/2023/08/29/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/MallChat/</url>
      
        <content type="html"><![CDATA[<h1 id="MallChat"><a href="#MallChat" class="headerlink" title="MallChat"></a><a href="https://github.com/zongzibinbin/MallChat">MallChat</a></h1><h2 id="禁止"><a href="#禁止" class="headerlink" title="禁止"></a>禁止</h2><ol><li>禁止在代码中出现 return fail info</li><li>禁止在代码中出现魔法数值</li></ol><h2 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h2><p>具体代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/msg&quot;)</span><br><span class="hljs-meta">@ApiOperation(&quot;发送消息&quot;)</span><br><span class="hljs-meta">@FrequencyControl(time = 5, count = 3, target = FrequencyControl.Target.UID)</span><br><span class="hljs-meta">@FrequencyControl(time = 30, count = 5, target = FrequencyControl.Target.UID)</span><br><span class="hljs-meta">@FrequencyControl(time = 60, count = 10, target = FrequencyControl.Target.UID)</span><br><span class="hljs-keyword">public</span> ApiResult&lt;ChatMessageResp&gt; <span class="hljs-title function_">sendMsg</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> <span class="hljs-meta">@RequestBody</span> ChatMessageReq request)</span> &#123;<span class="hljs-comment">//todo 发送给单聊</span><br><span class="hljs-type">Long</span> <span class="hljs-variable">msgId</span> <span class="hljs-operator">=</span> chatService.sendMsg(request, RequestHolder.get().getUid());<br><span class="hljs-comment">//返回完整消息格式，方便前端展示</span><br><span class="hljs-keyword">return</span> ApiResult.success(chatService.getMsgResp(msgId, RequestHolder.get().getUid()));<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h3><ol><li><a href="#%E9%A2%91%E6%8E%A7">频控</a></li><li>在登录过程中将用户信息存放打ThreadLocal中后，通过ReqyestHolder.get()方法获取<ol><li>实现方式 继承 HandlerInterceptor 重写 preHandle() 和 afterCompletion()方法</li><li>实现 WebMvcConfiguration 重写 addInterceptors 将 step1的类 加入到 InterceptorRegistry</li></ol></li></ol><h4 id="发送消息具体处理"><a href="#发送消息具体处理" class="headerlink" title="发送消息具体处理"></a>发送消息具体处理</h4><p>具体代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 发送消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> Long <span class="hljs-title function_">sendMsg</span><span class="hljs-params">(ChatMessageReq request, Long uid)</span> &#123;<br>    check(request, uid);<br>    <span class="hljs-type">AbstractMsgHandler</span> <span class="hljs-variable">msgHandler</span> <span class="hljs-operator">=</span> MsgHandlerFactory.getStrategyNoNull(request.getMsgType());<span class="hljs-comment">//todo 这里先不扩展，后续再改</span><br>    msgHandler.checkMsg(request, uid);<br>    <span class="hljs-comment">//同步获取消息的跳转链接标题</span><br>    <span class="hljs-type">Message</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> MessageAdapter.buildMsgSave(request, uid);<br>    messageDao.save(insert);<br>    msgHandler.saveMsg(insert, request);<br>    <span class="hljs-comment">//发布消息发送事件</span><br>    applicationEventPublisher.publishEvent(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MessageSendEvent</span>(<span class="hljs-built_in">this</span>, insert.getId()));<br>    <span class="hljs-keyword">return</span> insert.getId();<br>&#125;<br></code></pre></td></tr></table></figure><p>代码解释</p><ol><li><p>MsgHandlerFactory.getStrategyNoNull(request.getMsgType())</p><ol><li>具体实现方法是通过 具体的消息利用spring注入实例化的方式，将</li></ol></li><li><p>发布消息发送事件</p><ol><li><p>利用spring 事件发布</p></li><li><p>MessageSendEvent 需要继承 ApplicationEvent</p></li><li><p>对应方法需要这么使用 </p><ol><li><pre><code class="java">@TransactionalEventListener(phase = TransactionPhase.BEFORE_COMMIT, classes = MessageSendEvent.class, fallbackExecution = true)    public void messageRoute(MessageSendEvent event) &#123;        Long msgId = event.getMsgId();        mqProducer.sendSecureMsg(MQConstant.SEND_MSG_TOPIC, new MsgSendMessageDTO(msgId), msgId);    &#125;</code></pre></li></ol></li></ol></li></ol><h2 id="频控"><a href="#频控" class="headerlink" title="频控"></a>频控</h2><p>解释：控制访问次数</p><h3 id="1-注解"><a href="#1-注解" class="headerlink" title="1.注解"></a>1.注解</h3>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github开源项目MallChat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring</title>
      <link href="/2023/08/21/spring/"/>
      <url>/2023/08/21/spring/</url>
      
        <content type="html"><![CDATA[<h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><h3 id="使用-Builder"><a href="#使用-Builder" class="headerlink" title="使用@Builder"></a>使用@Builder</h3><ol><li>必须同时使用 @NoArgsConstructor，@AllArgsConstructor</li><li>类命.buider() 之后换行， .build(); 必须在最后一行</li></ol><h1 id="spring-event"><a href="#spring-event" class="headerlink" title="spring - event"></a>spring - event</h1><h2 id="ApplicationEventPublisher"><a href="#ApplicationEventPublisher" class="headerlink" title="ApplicationEventPublisher"></a>ApplicationEventPublisher</h2><h3 id="前景"><a href="#前景" class="headerlink" title="前景"></a>前景</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageSendEvent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ApplicationEvent</span> &#123;<br>    <span class="hljs-keyword">private</span> Long msgId;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MessageSendEvent</span><span class="hljs-params">(Object source, Long msgId)</span> &#123;<br>        <span class="hljs-built_in">super</span>(source);<br>        <span class="hljs-built_in">this</span>.msgId = msgId;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> ApplicationEventPublisher applicationEventPublisher;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">method</span><span class="hljs-params">()</span>&#123;<br>    applicationEventPublisher.publishEvent(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MessageSendEvent</span>(<span class="hljs-built_in">this</span>, insert.getId()));<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@TransactionalEventListener(classes = MessageSendEvent.class, fallbackExecution = true)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">messageRoute</span><span class="hljs-params">(MessageSendEvent event)</span> &#123;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="spring-transaction"><a href="#spring-transaction" class="headerlink" title="spring - transaction"></a>spring - transaction</h1><h2 id="判断当前代码中是否存在事务未提交"><a href="#判断当前代码中是否存在事务未提交" class="headerlink" title="判断当前代码中是否存在事务未提交"></a>判断当前代码中是否存在事务未提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">boolean</span> <span class="hljs-variable">inTransaction</span> <span class="hljs-operator">=</span> TransactionSynchronizationManager.isActualTransactionActive();<br><span class="hljs-comment">//非事务状态，直接执行，不做任何保证。</span><br><span class="hljs-keyword">if</span> (!inTransaction) &#123;<br>    <span class="hljs-keyword">return</span> joinPoint.proceed();<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="spring-aop"><a href="#spring-aop" class="headerlink" title="spring - aop"></a>spring - aop</h1><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(value = ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Idempotent &#123;<br><br>    String <span class="hljs-title function_">name</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    String <span class="hljs-title function_">field</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    Class <span class="hljs-title function_">type</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="切面类"><a href="#切面类" class="headerlink" title="切面类"></a>切面类</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Around;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Pointcut;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IdempotentAspect</span> &#123;<br><br>    <span class="hljs-meta">@Pointcut(&quot;@annotation(com.xuyongqing.annotations.Idempotent)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">idempotent</span><span class="hljs-params">()</span>&#123;<br><br>    &#125;<br>    <span class="hljs-meta">@Around(&quot;idempotent()&quot;)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">methodAround1</span><span class="hljs-params">(ProceedingJoinPoint joinPoint)</span> <span class="hljs-keyword">throws</span> Throwable&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.xuyongqing.annotations.Idempotent;<br><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Around;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IdempotentAspect</span> &#123;<br><br>    <span class="hljs-meta">@Around(&quot;@annotation(idempotent))</span><span class="hljs-string">&quot;)</span><br><span class="hljs-string">    public Object methodAround2(ProceedingJoinPoint joinPoint, Idempotent idempotent)&#123;</span><br><span class="hljs-string">        return null;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Doris</title>
      <link href="/2023/08/14/%E8%AF%BE%E9%A2%98/Doris/"/>
      <url>/2023/08/14/%E8%AF%BE%E9%A2%98/Doris/</url>
      
        <content type="html"><![CDATA[<h1 id="Doris"><a href="#Doris" class="headerlink" title="Doris"></a>Doris</h1><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a><a href="https://doris.apache.org/zh-CN/docs/dev/get-starting/quick-start/">Getting Started</a></h2>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> doris </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx</title>
      <link href="/2023/08/14/nginx/"/>
      <url>/2023/08/14/nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="本地接口通过外网访问"><a href="#本地接口通过外网访问" class="headerlink" title="本地接口通过外网访问"></a>本地接口通过外网访问</h1><h2 id="查看nginx是否启动"><a href="#查看nginx是否启动" class="headerlink" title="查看nginx是否启动"></a>查看nginx是否启动</h2><h3 id="window环境下"><a href="#window环境下" class="headerlink" title="window环境下"></a>window环境下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist /fi <span class="hljs-string">&quot;imagename eq nginx.exe&quot;</span><br></code></pre></td></tr></table></figure><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>代理软件：可以代理本地接口能通过外网访问</li><li>nginx</li><li>本地服务</li></ol><h2 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h2><h3 id="本地接口通过外网访问-1"><a href="#本地接口通过外网访问-1" class="headerlink" title="本地接口通过外网访问"></a>本地接口通过外网访问</h3><ol><li>natapp 80 -&gt; 8080</li><li>nginx 8080 -&gt; 4000</li><li>本地启动 4000端口</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>    listen 8080;<br>    server_name your-domain.com;<br>    location / &#123;<br>        proxy_pass http://localhost:4000;<br>        proxy_set_header Host <span class="hljs-variable">$host</span>;<br>        proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="如何开启集群"><a href="#如何开启集群" class="headerlink" title="如何开启集群"></a>如何开启集群</h3><p>在下面的配置中，<code>upstream backend</code> 定义了一个名为 <code>backend</code> 的后端服务器集群，其中包含了多个服务器的地址和端口。你可以根据实际情况添加更多的后端服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">http &#123;<br>    upstream backend &#123;<br>        server 192.168.0.178:8081;<br>        server 192.168.0.179:8081;<br>        <span class="hljs-comment"># 添加更多的后端服务器地址和端口</span><br>    &#125;<br>    server &#123;<br>        listen 80;<br>        server_name your-domain.com;<br>        location / &#123;<br>            proxy_pass http://backend;<br>            proxy_set_header Host <span class="hljs-variable">$host</span>;<br>            proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LocalDate</title>
      <link href="/2023/08/11/localDate/"/>
      <url>/2023/08/11/localDate/</url>
      
        <content type="html"><![CDATA[<h1 id="LocalDateTime"><a href="#LocalDateTime" class="headerlink" title="LocalDateTime"></a>LocalDateTime</h1><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">DateTimeFormatter</span> <span class="hljs-variable">format</span> <span class="hljs-operator">=</span> DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>);<br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2022-01-01&quot;</span>,format);<br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2022-01-01&quot;</span>, format);<br><br><br>System.err.println(a.isBefore(b));<br>System.err.println(a.isAfter(b));<br>System.err.println(a.isEqual(b));<br><br><span class="hljs-comment">//结果打印</span><br><span class="hljs-comment">//false</span><br><span class="hljs-comment">//false</span><br><span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LocalDate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stream</title>
      <link href="/2023/08/11/stream/"/>
      <url>/2023/08/11/stream/</url>
      
        <content type="html"><![CDATA[<h1 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h1><h2 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">DateTimeFormatter</span> <span class="hljs-variable">dateTimeFormatter</span> <span class="hljs-operator">=</span> DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>);<br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">beginLocalDate</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2022-01-01&quot;</span>, dateTimeFormatter);<br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">endLocalDate</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2023-12-31&quot;</span>, dateTimeFormatter);<br><br>List&lt;YearMonthDayDTO&gt; yearMonthDayDTOList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br><span class="hljs-keyword">while</span> (beginLocalDate.isBefore(endLocalDate))&#123;<br>    beginLocalDate.format(DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>));<br><br>    <span class="hljs-type">YearMonthDayDTO</span> <span class="hljs-variable">yearMonthDayDTO</span> <span class="hljs-operator">=</span> YearMonthDayDTO<br>        .builder()<br>        .year(String.valueOf(beginLocalDate.getYear()))<br>        .month(String.valueOf(beginLocalDate.getMonth().getValue()))<br>        .day(String.valueOf(beginLocalDate.getDayOfMonth()))<br>        .build();<br>    yearMonthDayDTOList.add(yearMonthDayDTO);<br><br>    beginLocalDate = beginLocalDate.plusDays(<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">Map&lt;String, Set&lt;String&gt;&gt; monthDayMap = yearMonthDayDTOList.stream().collect(Collectors.groupingBy(YearMonthDayDTO::getMonth, Collectors.collectingAndThen(Collectors.toSet(), list -&gt; list.stream().filter(obj -&gt; Integer.valueOf(obj.getDay()) &lt; <span class="hljs-number">2</span>).map(YearMonthDayDTO::getDay).collect(Collectors.toSet()))));<br>yearMonthDayDTOList.stream().collect(Collectors.groupingBy(YearMonthDayDTO::getMonth, Collectors.mapping(Function.identity(), Collectors.toSet())));<br></code></pre></td></tr></table></figure><h3 id="Collectors-collectingAndThen"><a href="#Collectors-collectingAndThen" class="headerlink" title="Collectors.collectingAndThen"></a>Collectors.collectingAndThen</h3><p>​解释：对已经收集起来的数据进行处理</p><h3 id="Collectors-mapping"><a href="#Collectors-mapping" class="headerlink" title="Collectors.mapping"></a>Collectors.mapping</h3><p>​解释：对正在收集的数据进行处理</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stream </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rpc</title>
      <link href="/2023/08/07/rpc/"/>
      <url>/2023/08/07/rpc/</url>
      
        <content type="html"><![CDATA[<p>1.自定义扫描注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@Import(CustomScannerRegistrar.class)</span><br><span class="hljs-meta">@Documented</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RpcScan &#123;<br><br>    String[] basePackage();<br><br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xxl-job</title>
      <link href="/2023/08/01/xxl-job/"/>
      <url>/2023/08/01/xxl-job/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/xuxueli/xxl-job.git">XXL-JOB</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java">Map&lt;Method, XxlJob&gt; annotatedMethods = <span class="hljs-literal">null</span>;   <span class="hljs-comment">// referred to ：org.springframework.context.event.EventListenerMethodProcessor.processBean</span><br>            <span class="hljs-keyword">try</span> &#123;<br>                annotatedMethods = MethodIntrospector.selectMethods(bean.getClass(),<br>                        <span class="hljs-keyword">new</span> <span class="hljs-title class_">MethodIntrospector</span>.MetadataLookup&lt;XxlJob&gt;() &#123;<br>                            <span class="hljs-meta">@Override</span><br>                            <span class="hljs-keyword">public</span> XxlJob <span class="hljs-title function_">inspect</span><span class="hljs-params">(Method method)</span> &#123;<br>                                <span class="hljs-keyword">return</span> AnnotatedElementUtils.findMergedAnnotation(method, XxlJob.class);<br>                            &#125;<br>                        &#125;);<br>            &#125; <span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br>                logger.error(<span class="hljs-string">&quot;xxl-job method-jobhandler resolve error for bean[&quot;</span> + beanDefinitionName + <span class="hljs-string">&quot;].&quot;</span>, ex);<br>            &#125;<br>            <span class="hljs-keyword">if</span> (annotatedMethods==<span class="hljs-literal">null</span> || annotatedMethods.isEmpty()) &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-comment">// generate and regist method job handler</span><br>            <span class="hljs-keyword">for</span> (Map.Entry&lt;Method, XxlJob&gt; methodXxlJobEntry : annotatedMethods.entrySet()) &#123;<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">executeMethod</span> <span class="hljs-operator">=</span> methodXxlJobEntry.getKey();<br>                <span class="hljs-type">XxlJob</span> <span class="hljs-variable">xxlJob</span> <span class="hljs-operator">=</span> methodXxlJobEntry.getValue();<br>                <span class="hljs-comment">// regist</span><br>                registJobHandler(xxlJob, bean, executeMethod);<br>            &#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 定时任务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xxl-job </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/26/%E5%B7%A5%E7%A8%8B%E5%88%9D%E5%A7%8B%E5%8C%96/hello-world/"/>
      <url>/2023/07/26/%E5%B7%A5%E7%A8%8B%E5%88%9D%E5%A7%8B%E5%8C%96/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 初始工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> init-project </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
