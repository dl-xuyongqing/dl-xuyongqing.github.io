<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>时间流逝之2025-02-25</title>
      <link href="/2025/02/25/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20250225/"/>
      <url>/2025/02/25/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20250225/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/#%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E9%95%BF%E8%BF%9E%E6%8E%A5">查询数据库中长连接</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每天学习一点 </tag>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间流逝之2024-09-11</title>
      <link href="/2024/09/11/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240911/"/>
      <url>/2024/09/11/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240911/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/#with">关键字with</a><br><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/#%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2">拼接字符串</a><br><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/#%E6%97%A5%E6%9C%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%97%B6%E9%97%B4%E7%B1%BB%E5%9E%8B">日期字符串转时间类型</a><br><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/#distinct">关键字distinct</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每天学习一点 </tag>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github</title>
      <link href="/2024/07/19/xuyongqing/github/github/"/>
      <url>/2024/07/19/xuyongqing/github/github/</url>
      
        <content type="html"><![CDATA[<h1 id="github加载下载"><a href="#github加载下载" class="headerlink" title="github加载下载"></a>github加载下载</h1><p><a href="https://fastgit.cc/">github上面zip等加速下载</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间流逝之2024-07-19</title>
      <link href="/2024/07/19/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240719/"/>
      <url>/2024/07/19/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240719/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/07/19/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/window/#%E6%9F%A5%E5%85%B3%E9%94%AE%E5%AD%97%E5%91%BD%E4%BB%A4">使用window命令查询超大txt文件</a><br><a href="/2024/07/19/xuyongqing/github/github/#github%E5%8A%A0%E8%BD%BD%E4%B8%8B%E8%BD%BD">github加速下载网址</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每天学习一点 </tag>
            
            <tag> window </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window</title>
      <link href="/2024/07/19/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/window/"/>
      <url>/2024/07/19/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/window/</url>
      
        <content type="html"><![CDATA[<h1 id="window命令"><a href="#window命令" class="headerlink" title="window命令"></a>window命令</h1><h2 id="查关键字命令"><a href="#查关键字命令" class="headerlink" title="查关键字命令"></a>查关键字命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">select-string</span> <span class="hljs-literal">-path</span> 文件路径 <span class="hljs-literal">-pattern</span> 关键字 <span class="hljs-literal">-context</span> 前行数,后行数<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> window </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间流逝之2024-07-18</title>
      <link href="/2024/07/18/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240718/"/>
      <url>/2024/07/18/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240718/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/05/05/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/#%E5%91%BD%E4%BB%A4">redis设置无过期时间</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每天学习一点 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>996-alg</title>
      <link href="/2024/07/12/xuyongqing/%E4%BC%A0%E5%A5%87/996-alg/"/>
      <url>/2024/07/12/xuyongqing/%E4%BC%A0%E5%A5%87/996-alg/</url>
      
        <content type="html"><![CDATA[<h1 id="alg框架"><a href="#alg框架" class="headerlink" title="alg框架"></a>alg框架</h1><h2 id="如何制作顶部按钮"><a href="#如何制作顶部按钮" class="headerlink" title="如何制作顶部按钮"></a>如何制作顶部按钮</h2><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><ul><li>抽拉动画</li></ul><h3 id="制作步骤"><a href="#制作步骤" class="headerlink" title="制作步骤"></a>制作步骤</h3><p>解释：下面得 [filename] 为相同，可以自定义</p><ul><li>使用可视化工具配置UI，路径 GUIExport&#x2F;alg&#x2F;[filename]&#x2F;</li><li>客户端 alg&#x2F;ui&#x2F;[filename]&#x2F;main.lua</li><li>挂在节点<ul><li>使用alg框架，在主函数里面得有 location 来区分挂载节点</li><li>使用官方，需要在延迟调用里面<a href="#%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E9%83%A8%E5%88%86%E4%BB%A3%E7%A0%81">写入</a></li></ul></li><li></li><li><strong>调用在延迟加载里面进行重载</strong><ul><li>在 dev&#x2F;alg&#x2F;dev&#x2F;delay&#x2F;创建文件</li></ul></li><li><a href="#%E5%AE%A2%E6%88%B7%E7%AB%AF-%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE%E5%88%B6%E4%BD%9C">客户端代码</a></li><li><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF-%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE%E5%88%B6%E4%BD%9C">服务端代码</a></li><li>动画效果制作</li></ul><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ul><li>需要修改main.lua里面得node变量，不然和npc会共用</li></ul><h2 id="回收功能"><a href="#回收功能" class="headerlink" title="回收功能"></a>回收功能</h2><h3 id="制作回收按钮，回收面板"><a href="#制作回收按钮，回收面板" class="headerlink" title="制作回收按钮，回收面板"></a>制作回收按钮，回收面板</h3><p><a href="#%E5%AE%A2%E6%88%B7%E7%AB%AF-%E5%9B%9E%E6%94%B6%E6%8C%89%E9%92%AE">在延迟回调里面的函数可以被被其他地方调用</a></p><h2 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h2><h3 id="客户端-顶部按钮制作"><a href="#客户端-顶部按钮制作" class="headerlink" title="客户端-顶部按钮制作"></a>客户端-顶部按钮制作</h3><h4 id="延迟加载部分代码"><a href="#延迟加载部分代码" class="headerlink" title="延迟加载部分代码"></a>延迟加载部分代码</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">--方式1：使用alg 框架挂载点</span><br>alg:uiopen(<span class="hljs-string">&quot;[filename]&quot;</span>)<br><br><span class="hljs-comment">--方式2：使用官方定位位置后挂在</span><br><span class="hljs-keyword">local</span> right = GUI:Attach_rightTop()<br><span class="hljs-keyword">local</span> have = GUI:GetWindown(right, <span class="hljs-string">&quot;Layout&quot;</span>)<br><span class="hljs-keyword">if</span> have <span class="hljs-keyword">then</span> <br>GUI:removeFromParent(have)    <br><span class="hljs-keyword">end</span><br><span class="hljs-comment">-- alg:uiopenbyparent 会生成全局表</span><br>alg:uiopenbyparent(parent, <span class="hljs-string">&quot;[filename]&quot;</span>)<br><br><span class="hljs-comment">--在 客户端 alg/ui/[filename]/main.lua 中</span><br><span class="hljs-comment">--变量 class = &quot;TopClass&quot;</span><br><br><span class="hljs-built_in">log</span>:<span class="hljs-built_in">debug</span>(TopClass)<br>SL:Sump(TopClass)<br><br></code></pre></td></tr></table></figure><h4 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- id = buttonLayout 是顶部按钮得容器</span><br><span class="hljs-comment">-- id = autoHide0 是 显示、隐藏按钮</span><br><br><span class="hljs-keyword">local</span> showStatus = <span class="hljs-literal">true</span><br><span class="hljs-keyword">local</span> showPos;<br><span class="hljs-keyword">local</span> lock = <span class="hljs-literal">false</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autoHide</span><span class="hljs-params">(...)</span></span><br>    <span class="hljs-keyword">if</span> lock <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">local</span> x<br>    <span class="hljs-keyword">if</span> showStatus <span class="hljs-keyword">then</span><br>        x = <span class="hljs-number">999</span><br>    <span class="hljs-keyword">else</span><br>        x = showPos.x<br>    <span class="hljs-keyword">end</span><br>    showStatus = <span class="hljs-keyword">not</span> showStatus<br>    <span class="hljs-comment">--动画完成后回调</span><br>    <span class="hljs-keyword">local</span> backFunc = GUI:CallFunc(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span><br>        lock = <span class="hljs-literal">false</span>   <br>    <span class="hljs-keyword">end</span>)<br>    <span class="hljs-comment">-- 移动动画</span><br>    <span class="hljs-keyword">local</span> action = GUI:ActionMoveTo(<span class="hljs-number">1</span>,x, showPos.y)<br>    <span class="hljs-comment">-- 顺序播放</span><br>    action = GUI:ActionSequence(action, backFunc)<br>    lock = <span class="hljs-literal">true</span><br>    GUI:runAction(_uiDelegate.buttonLayout, action)<br>    GUI:setVisible(_uiDelegate.autoHide0, showStatus)<br>    GUI:setVisible(_uiDelegate.autoHide1, <span class="hljs-keyword">not</span> showStatus)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span><span class="hljs-params">(var1,var2,var3)</span></span><br>    showPos = GUI:getPosition(_uiDelegate.buttonLayout)<br><br>    GUI:addOnClickEvent(_uiDelegate.autoHide0, autoHide)<br>    GUI:addOnClickEvent(_uiDelegate.autoHide1, autoHide)<br><br>    <span class="hljs-keyword">local</span> pos = GUI:getPosition(_uiDelegate.autoHide0)<br>    GUI:setPosition(_uiDelegate.autoHide1, pos.x, pos.y)<br>    GUI:setPosition(_uiDelegate.autoHide1, <span class="hljs-keyword">not</span> showStatus)<br><span class="hljs-keyword">end</span><br><br><br></code></pre></td></tr></table></figure><h3 id="服务端-顶部按钮制作"><a href="#服务端-顶部按钮制作" class="headerlink" title="服务端-顶部按钮制作"></a>服务端-顶部按钮制作</h3><h3 id="客户端-回收按钮"><a href="#客户端-回收按钮" class="headerlink" title="客户端-回收按钮"></a>客户端-回收按钮</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- dev/alg/dev/delay/[filename]</span><br><span class="hljs-comment">--打开面板功能</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">listenBag</span><span class="hljs-params">(...)</span></span><br>    <span class="hljs-built_in">log</span>:<span class="hljs-built_in">debug</span>(监听背包打开)<br>    <span class="hljs-comment">--绑定回收按钮</span><br>    GUI:addOnClickEvent(Bag._ui.recycle, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(...)</span></span><br>    <span class="hljs-comment">--回收目录在 GUIExport/回收/main.lua 可以通过可视化配置</span><br>        <span class="hljs-comment">--在alg/dev/ui/回收/</span><br>        alg:uiopen(<span class="hljs-string">&quot;回收&quot;</span>)<br>    <span class="hljs-keyword">end</span>)<br>    <br>    <br><span class="hljs-keyword">end</span><br><br><br><br><span class="hljs-comment">--dev/GUILayout/Bag.lua 在 Bag.main(page) 结尾加入</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Bag.main</span><span class="hljs-params">(page)</span></span><br><span class="hljs-keyword">if</span> listenBag <span class="hljs-keyword">then</span><br>        listenBag()<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Lua </tag>
            
            <tag> 996 </tag>
            
            <tag> alg框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间流逝之2024-07-12</title>
      <link href="/2024/07/12/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240712/"/>
      <url>/2024/07/12/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240712/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/07/12/xuyongqing/%E4%BC%A0%E5%A5%87/996-alg/#%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE%E5%88%B6%E4%BD%9C">996-alg顶部按钮</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每天学习一点 </tag>
            
            <tag> lua </tag>
            
            <tag> alg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2024/07/10/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Linux/"/>
      <url>/2024/07/10/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Linux/</url>
      
        <content type="html"><![CDATA[<p>Linux</p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看系统内存</span><br>df -h <br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看系统运行程序</span><br>top<br><span class="hljs-meta prompt_">#</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间流逝之2024-07-10</title>
      <link href="/2024/07/10/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240710/"/>
      <url>/2024/07/10/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240710/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/07/10/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Linux/#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">记录Linux常用命令</a><br><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/#%E6%B8%85%E7%90%86%E5%BD%92%E6%A1%A3%E6%97%A5%E5%BF%97">清理postgresql的归档日志</a><br><a href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/#%E6%B8%85%E7%90%86%E5%BD%92%E6%A1%A3%E6%97%A5%E5%BF%97">记录Oracle基础语法、查询表空间、添加表分区、添加分区</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> oracle </tag>
            
            <tag> 每天学习一点 </tag>
            
            <tag> linux </tag>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间流逝之2024-07-04</title>
      <link href="/2024/07/04/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240704/"/>
      <url>/2024/07/04/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA/20240704/</url>
      
        <content type="html"><![CDATA[<p><a href="/2024/07/04/xuyongqing/mq/rocketmq/#%E6%A0%B8%E5%BF%83%E5%86%85%E5%AE%B9">rocketmq基础认知</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> rocketmq </tag>
            
            <tag> 每天学习一点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ</title>
      <link href="/2024/07/04/xuyongqing/mq/rocketmq/"/>
      <url>/2024/07/04/xuyongqing/mq/rocketmq/</url>
      
        <content type="html"><![CDATA[<h1 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h1><h2 id="核心内容"><a href="#核心内容" class="headerlink" title="核心内容"></a>核心内容</h2><ul><li>基本概念</li><li>发送者和消费者</li><li>高可用和高负载</li><li>消息存储和性能优化</li><li>事务消息和死信队列</li><li>高级特性和运维</li><li>实战问题</li></ul><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="核心组件"><a href="#核心组件" class="headerlink" title="核心组件"></a>核心组件</h3><h4 id="NameServer"><a href="#NameServer" class="headerlink" title="NameServer"></a>NameServer</h4><p>作用：NameServer命名服务和配置中心，维护整个集群得路由信息</p><h4 id="Broker"><a href="#Broker" class="headerlink" title="Broker"></a>Broker</h4><p>作用：</p><ul><li>消息存储和转发<ul><li>接受生产者得消息并存储</li><li>为消费者提供消息拉取服务</li></ul></li><li>分Master和Slave两种角色<ul><li>master负责读写</li><li>slave服务master备份，用于故障切换提高可用性</li></ul></li><li>消息持久化存储，消息刷盘策略，消息队列得分批和管理</li></ul><h4 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h4><p>作用：消息生产者，发送模式：同步发送、异步发送、单向发送</p><h4 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h4><p>作用：消息消费者，从broker拉取消息进行业务逻辑处理</p><ul><li>支持类型<ul><li>广播消费<ul><li>一条消息被所有消费者实例消费</li></ul></li><li>集群消费<ul><li>消费组内一个&#x2F;多个 消费者实例公平消费</li></ul></li></ul></li></ul><h4 id="Filter-Server-可选"><a href="#Filter-Server-可选" class="headerlink" title="Filter Server(可选)"></a>Filter Server(可选)</h4><h4 id="Dashboard-可视化监控界面"><a href="#Dashboard-可视化监控界面" class="headerlink" title="Dashboard(可视化监控界面)"></a>Dashboard(可视化监控界面)</h4><h3 id="支持消费模式"><a href="#支持消费模式" class="headerlink" title="支持消费模式"></a>支持消费模式</h3><h4 id="发布-订阅模式-and-广播消费模式"><a href="#发布-订阅模式-and-广播消费模式" class="headerlink" title="发布&#x2F;订阅模式 and 广播消费模式"></a>发布&#x2F;订阅模式 and 广播消费模式</h4><p>发送者发布消息到主题(topic)，所有订阅该主题消费者都能收到消息，</p><h4 id="集群消费模式"><a href="#集群消费模式" class="headerlink" title="集群消费模式"></a>集群消费模式</h4><p>集群内同一个消费组会共同消费一个主题下得消息，每条消息只会被组内得一个消费者消费</p><h4 id="顺序消费模式"><a href="#顺序消费模式" class="headerlink" title="顺序消费模式"></a>顺序消费模式</h4><p>顺序消息保证同一主题下的消息按照发送顺序进行消费</p><h4 id="事务消息"><a href="#事务消息" class="headerlink" title="事务消息"></a>事务消息</h4><p>实现分布式事务，确保本地消息生产和本地事务原子性，确保消息要么都成功要么都不成功，适用于涉及跨服务的事务处理场景。</p><h4 id="延迟消息"><a href="#延迟消息" class="headerlink" title="延迟消息"></a>延迟消息</h4><p>允许消息在指定的延迟时间后才被消费者消费，适用于如定时任务、消息的有效期控制等场景。</p><h4 id="批量消息"><a href="#批量消息" class="headerlink" title="批量消息"></a>批量消息</h4><p>生产者可以一次性发送一组消息，减少网络交互次数，提高吞吐量，适用于数据聚合或者日志收集等场景。</p><h4 id="过滤消息"><a href="#过滤消息" class="headerlink" title="过滤消息"></a>过滤消息</h4><p>RocketMQ支持基于标签（Tag）或者SQL表达式的消息过滤，允许消费者只接收满足特定条件的消息，提升消息处理的针对性和效率。</p>]]></content>
      
      
      
        <tags>
            
            <tag> rocketmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle</title>
      <link href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/"/>
      <url>/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/</url>
      
        <content type="html"><![CDATA[<h1 id="ORACLE"><a href="#ORACLE" class="headerlink" title="ORACLE"></a>ORACLE</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs oracle"><br>--时间转化<br>select to_date(&#x27;column1&#x27;, &#x27;yyyy-mm-dd HH24:mi:ss&#x27;) from table_name;<br></code></pre></td></tr></table></figure><h3 id="查询表空间"><a href="#查询表空间" class="headerlink" title="查询表空间"></a>查询表空间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs oracle">SELECT a.tablespace_name &quot;表空间名&quot;,<br>       total &quot;表空间大小&quot;,<br>       free &quot;表空间剩余大小&quot;,<br>       (total - free) &quot;表占用空间大小&quot;,<br>       ROUND((total - free) / total * 100, 2) || &#x27;%&#x27; &quot;已使用空间百分比&quot;<br>FROM (SELECT tablespace_name, SUM(bytes) / 1024 / 1024 total<br>      FROM dba_data_files<br>      GROUP BY tablespace_name) a,<br>     (SELECT tablespace_name, SUM(bytes) / 1024 / 1024 free<br>      FROM dba_free_space<br>      GROUP BY tablespace_name) b<br>WHERE a.tablespace_name = b.tablespace_name<br><br></code></pre></td></tr></table></figure><h3 id="添加表分区"><a href="#添加表分区" class="headerlink" title="添加表分区"></a>添加表分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs oracle">alter tablespace WPPS_TABLESPACE add datafile &#x27;+DATA/wpps/datafile/wpps202405281.dbf&#x27; size 30G;<br><br></code></pre></td></tr></table></figure><h3 id="添加分区"><a href="#添加分区" class="headerlink" title="添加分区"></a>添加分区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oracle">ALTER TABLE 表名 add partition 分区名称 VALUES (具体值);<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>postgresql</title>
      <link href="/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/"/>
      <url>/2024/07/02/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/postgresql/</url>
      
        <content type="html"><![CDATA[<h1 id="pgsql语法"><a href="#pgsql语法" class="headerlink" title="pgsql语法"></a>pgsql语法</h1><h2 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h2><figure class="highlight postgresql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs postgresql"><span class="hljs-comment">-- 日期转换</span><br></code></pre></td></tr></table></figure><h3 id="with"><a href="#with" class="headerlink" title="with"></a>with</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> tt1 <span class="hljs-keyword">as</span> (<br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> table1<br>)<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> table2 tt2 <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> tt1 <span class="hljs-keyword">on</span> tt1.column1 <span class="hljs-operator">=</span> tt2.column1<br></code></pre></td></tr></table></figure><h3 id="distinct"><a href="#distinct" class="headerlink" title="distinct"></a>distinct</h3><p>distinct: 去重<br>distinct on(column..): 通过分组取最顶层数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--根据table里面createtime, updatetime 排序取colum1, colum2分组最新一条数据</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> <span class="hljs-keyword">on</span>(colum1, colum2) column3, column4<br><span class="hljs-keyword">from</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> createtime, updatetime<br></code></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="拼接字符串"><a href="#拼接字符串" class="headerlink" title="拼接字符串"></a>拼接字符串</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-number">1</span><span class="hljs-operator">||</span> <span class="hljs-number">2</span><span class="hljs-operator">||</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="日期字符串转时间类型"><a href="#日期字符串转时间类型" class="headerlink" title="日期字符串转时间类型"></a>日期字符串转时间类型</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 字符转时间</span><br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;2024-09-11&#x27;</span>::<span class="hljs-type">date</span><br><span class="hljs-comment">--天数+1</span><br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;2024-09-11&#x27;</span>::<span class="hljs-type">date</span> <span class="hljs-operator">+</span> <span class="hljs-type">interval</span> <span class="hljs-string">&#x27;1 day&#x27;</span><br><span class="hljs-comment">-- 时间转字符串</span><br><span class="hljs-keyword">select</span> to_char(datetime, <span class="hljs-string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">table</span><br></code></pre></td></tr></table></figure><h2 id="清理归档日志"><a href="#清理归档日志" class="headerlink" title="清理归档日志"></a>清理归档日志</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo su - postgres<br>pg_controldata<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">xxx 替换成 pg_controldata 里面的 Latest checkpoint<span class="hljs-string">&#x27;s REDO WAL file对应编号</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"># 清理日志归档</span></span><br>pg_archivecleanup /pgdata/pg_wal xxx<br><br></code></pre></td></tr></table></figure><h2 id="查询数据库中长连接"><a href="#查询数据库中长连接" class="headerlink" title="查询数据库中长连接"></a>查询数据库中长连接</h2><h3 id="数据库中查询时间超过1分钟"><a href="#数据库中查询时间超过1分钟" class="headerlink" title="数据库中查询时间超过1分钟"></a>数据库中查询时间超过1分钟</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span>pg_stat_activity <br><span class="hljs-keyword">WHERE</span><br>( now( ) <span class="hljs-operator">-</span> pg_stat_activity.query_start ) <span class="hljs-operator">&gt;</span> <span class="hljs-type">INTERVAL</span> <span class="hljs-string">&#x27;1 minutes&#x27;</span> <br><span class="hljs-keyword">AND</span> STATE <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;active&#x27;</span>;<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span><br>duration <span class="hljs-keyword">DESC</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java特性</title>
      <link href="/2024/07/02/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/java%E7%89%B9%E6%80%A7/"/>
      <url>/2024/07/02/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/java%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="java14特性"><a href="#java14特性" class="headerlink" title="java14特性"></a>java14特性</h1><h2 id="关键字record"><a href="#关键字record" class="headerlink" title="关键字record"></a>关键字record</h2><p>解释：Java中的record是在Java 14版本中引入的新特性，它是一种 轻量级 的数据封装类型，用于定义不可变的数据对象</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ol><li>不可变性：record的实例是不可变的，一旦创建，就不能修改其状态。</li><li>自动生成方法：record自动提供了equals()、hashCode()、toString()等方法的实现。</li><li>紧凑的语法：record的定义非常简洁，可以节省大量的代码。</li></ol><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><p>创建表示学生信息的record</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">record</span> <span class="hljs-title class_">Student</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age, String major)</span> &#123;<br>    <span class="hljs-comment">// 可以在这里添加其他方法或构造函数</span><br>&#125;<br></code></pre></td></tr></table></figure><p>使用方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;Alice&quot;</span>, <span class="hljs-number">20</span>, <span class="hljs-string">&quot;Computer Science&quot;</span>);<br>        System.out.println(student.name()); <span class="hljs-comment">// 输出姓名</span><br>        System.out.println(student.age()); <span class="hljs-comment">// 输出年龄</span><br>        System.out.println(student.major()); <span class="hljs-comment">// 输出专业</span><br>        System.out.println(student); <span class="hljs-comment">// 输出整个对象</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="java13特性"><a href="#java13特性" class="headerlink" title="java13特性"></a>java13特性</h1><h2 id="关键字yield"><a href="#关键字yield" class="headerlink" title="关键字yield"></a>关键字yield</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span>&#123;<br><br>    <span class="hljs-comment">//常规写法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test1</span><span class="hljs-params">(init type)</span>&#123;<br>        <span class="hljs-keyword">switch</span> (type)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:&#123;<br>                System.err.println(<span class="hljs-string">&quot;1&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:&#123;<br>                System.err.println(<span class="hljs-string">&quot;2&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">default</span>:<br>                System.err.println(<span class="hljs-string">&quot;2&quot;</span>);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">//新特性写法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test2</span><span class="hljs-params">(<span class="hljs-type">int</span> type)</span>&#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">switch</span> (type)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span> -&gt; &#123;<span class="hljs-keyword">yield</span> <span class="hljs-number">11</span>;&#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span> -&gt; &#123;<span class="hljs-keyword">yield</span> <span class="hljs-number">22</span>;&#125;<br>        &#125;;<br>        System.err.println(result);<br>        <span class="hljs-comment">//type = 1 输出 11</span><br>        <span class="hljs-comment">//type = 2 输出 22</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java14特性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令</title>
      <link href="/2024/06/21/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/git/"/>
      <url>/2024/06/21/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">--初始化仓库<br>git init <br><br>--绑定远程分支<br>git remote add 本地分支名称 远程仓库地址<br><br>-- 绑定错误 or  绑定多个，通过 remove 移除<br>git remote remove 分支名称<br><br>git commit -m &quot;提交日志&quot;<br><br>--将本地分支提交到远程分支<br>git push localBranchName originBranchName<br>--<br>git push --set-upstream zuiye zuiye<br><br>--显示文件状态<br>git status<br><br>--显示具体得文件路径下 or 文件变更状态<br>git status 文件名称 or 文件路径<br><br>--比较不同点<br>git diff 文件名称<br></code></pre></td></tr></table></figure><h2 id="修改文件后提交"><a href="#修改文件后提交" class="headerlink" title="修改文件后提交"></a>修改文件后提交</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">--添加到暂存区<br>git add 文件路径<br>-- 提交到本地仓库<br>git commit -m &quot;提交内容&quot;<br>--提交到哪一个分支上面<br>git push zuiye <br></code></pre></td></tr></table></figure><h2 id="参考得其他命令"><a href="#参考得其他命令" class="headerlink" title="参考得其他命令"></a>参考得其他命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">-- 显示当前分支 a 显示所有分支<br>git branch [-a]<br><br>-- 显示当前分支和远程分支绑定状态<br>git remote -v<br><br>-- 忽略其他修改，关键一步 在 commit 前<br>git stash -u -k  <br><br>-- 恢复之前忽略的文件（非常重要的一步） 在 push 代码后<br>git stash pop <br><br><br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">--解决命令行显示乱码问题<br>git config --global core.quotepath false<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis相关</title>
      <link href="/2024/05/05/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/"/>
      <url>/2024/05/05/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/</url>
      
        <content type="html"><![CDATA[<h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">移除过期时间</span><br>PERSIST key<br></code></pre></td></tr></table></figure><h2 id="面试相关"><a href="#面试相关" class="headerlink" title="面试相关"></a>面试相关</h2><h3 id="redis哪些好处"><a href="#redis哪些好处" class="headerlink" title="redis哪些好处"></a>redis哪些好处</h3><ul><li>答：数据存放在内存中，支持5种数据类型，string，list，set，sort set，hash<ul><li>string基础用法</li><li>list链表</li><li>set集合，可以用于交集并集等等</li><li>hash存放对象内容</li><li>sort set 增加权重 score</li></ul></li></ul><h3 id="redis为啥这么快"><a href="#redis为啥这么快" class="headerlink" title="redis为啥这么快"></a>redis为啥这么快</h3><ul><li>数据存放在内存中，不需要访问磁盘，降低访问延迟，</li><li>单线程，避免多线程上下文切换</li><li>高效数据结构</li><li>非阻塞i&#x2F;o多路复用机制</li></ul><h2 id="重点难点-尽量理解"><a href="#重点难点-尽量理解" class="headerlink" title="重点难点(尽量理解)"></a>重点难点(尽量理解)</h2><p><a href="https://mp.weixin.qq.com/s/DCVZWAc_XgbmZ5KFOQEsAw">参考内容</a></p><p>redis 持久化 rdb aof</p><h3 id="持久化方式"><a href="#持久化方式" class="headerlink" title="持久化方式"></a>持久化方式</h3><ol><li>快照</li><li>文件追加方式</li><li>混合持久化方式</li></ol><h4 id="什么是rdb，rdb如何持久话"><a href="#什么是rdb，rdb如何持久话" class="headerlink" title="什么是rdb，rdb如何持久话"></a>什么是rdb，rdb如何持久话</h4><ol><li><p>某一个时间点，将内存中的数据存放到磁盘上</p></li><li><p>触发方式</p><ol><li>手动 save ，bgsave，save阻塞主线程，bgsave fork一个子线程</li><li>自动 - 需要修改配置</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#900秒内有1个key发生了变化，</span><br>save 900 1 <br><span class="hljs-comment">#服务器在300秒内呗修改10次 </span><br>save 300 10 <br><span class="hljs-comment">##服务器在60秒内呗修改10000 次</span><br>save 60 10000 <br><br><span class="hljs-comment">#如果想禁用快照保存的功能，可以通过注释掉所有&quot;save&quot;配置达到，或者在最后一条&quot;save&quot;配置后添加如下的配置：</span><br>save <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="什么是aof，aof如何实现持久化"><a href="#什么是aof，aof如何实现持久化" class="headerlink" title="什么是aof，aof如何实现持久化"></a>什么是aof，aof如何实现持久化</h4><p>以日志的形势记录<strong>每个写操作</strong></p><p>持久化流程：client 命令 -&gt; redis server -&gt; aof 缓存区 -&gt; aof 文件 -&gt; aof重写 -&gt;</p><p>aof 缓存区 -&gt; aof 文件 策略方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#always表示每次写入都执行fsync，以保证数据同步到磁盘</span><br>appendfsync always<br><span class="hljs-comment">#everysec表示每秒执行一次fsync，可能会导致丢失这1s数据</span><br>appendfsynv everysec<br><span class="hljs-comment">#no表示不执行fsync，由操作系统保证数据同步到磁盘，速度最快</span><br>appendfsync no <br></code></pre></td></tr></table></figure><h3 id="rdb和aof各自优缺点"><a href="#rdb和aof各自优缺点" class="headerlink" title="rdb和aof各自优缺点"></a>rdb和aof各自优缺点</h3><h4 id="rdb的优点"><a href="#rdb的优点" class="headerlink" title="rdb的优点"></a>rdb的优点</h4><ol><li>启动速度快</li><li>适合用于备份</li><li>性能好</li></ol><h4 id="rdb缺点"><a href="#rdb缺点" class="headerlink" title="rdb缺点"></a>rdb缺点</h4><ol><li>容易数据丢失</li><li>数据来比较大，fork产生子进程过程会堵塞主线程</li></ol><h4 id="aof优点"><a href="#aof优点" class="headerlink" title="aof优点"></a>aof优点</h4><ol><li>更高数据安全性</li><li></li></ol><h4 id="aof缺点"><a href="#aof缺点" class="headerlink" title="aof缺点"></a>aof缺点</h4><ol><li>文件比价大</li><li></li></ol><h3 id="生产配置持久化建议"><a href="#生产配置持久化建议" class="headerlink" title="生产配置持久化建议"></a>生产配置持久化建议</h3><p>（1）官方建议：是同时开启两种持久化策略。因为有时需要RDB快照是进行数据库备份，更快重启以及发生AOF引擎错误的解决办法。（换句话就是通过RDB来多备份一份数据总是好的）</p><p>（2） 因为RDB文件只用作后备用途，建议只在Slave上持久化RDB文件，而且只要15分钟备份一次就够了，只保留save 900 1这条规则。</p><p>（3）如果选择AOF，只要硬盘许可，应该尽量减少AOF rewrite的频率。因为一是带来了持续的IO，二是AOF rewrite的最后将rewrite过程中产生的新数据写到新文件造成的阻塞几乎是不可避免的。AOF重写的基础大小默认值64M太小了，可以设到2G以上。</p><h2 id="缓存三大问题"><a href="#缓存三大问题" class="headerlink" title="缓存三大问题"></a>缓存三大问题</h2><h3 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h3><p>查询数据不存在</p><h3 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h3><p>缓存过期，伴随大量对该key得请求</p><h3 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h3><p>同一时间大批量得key过期</p><h3 id="如何保证原子性"><a href="#如何保证原子性" class="headerlink" title="如何保证原子性"></a>如何保证原子性</h3><p>redis是单线程，所以redis停工得api也是原子性</p><p>但是我们业务中常常先有get，在 set业务导致，数据一致性</p><h3 id="一致性问题"><a href="#一致性问题" class="headerlink" title="一致性问题"></a>一致性问题</h3><ol><li>使用 incr，descr，setnx等原子操作</li><li>客户端加锁</li><li>使用lua脚本实现cas操作</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> redis基础知识 </tag>
            
            <tag> redis面试相关问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试问题</title>
      <link href="/2024/05/05/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
      <url>/2024/05/05/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<ol><li>arraylist 和 linketlist 的区别</li><li>spring cloud 和 dubbo的优缺点</li><li>easyexcel是如何复杂表头</li><li>说一下 easyexcel 优缺点</li><li>mysql如何优化查询</li><li>hashmap 底层数据结构</li><li>redis 数据类型： list 和 set 什么区别</li><li>docker 命令</li><li>linux查询日志相关命令</li><li>rocket mq 实现原理</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA</title>
      <link href="/2024/03/05/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/idea/"/>
      <url>/2024/03/05/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/idea/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h1><p>New Project -&gt; Spring Initializr 不能选择java8<br>更换Server URL &#x3D; start.aliyun.com 即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2024/03/05/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/03/05/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="ArrayList和LinkedList区别"><a href="#ArrayList和LinkedList区别" class="headerlink" title="ArrayList和LinkedList区别"></a>ArrayList和LinkedList区别</h2><ol><li>arrayList实现是基于数据，linkedlist实现是基于双向链表</li><li>随机访问，arraylist会通过下标直接定位，而linkedlist 每一个元素都依靠指针和它后一个元素连接</li><li>插入和删除操作，linkedlist优于arraylist，因为arraylist添加需要重新计算大小更新索引</li><li>linkedlist比arraylist更占内存</li></ol><h2 id="hashmap底层实现"><a href="#hashmap底层实现" class="headerlink" title="hashmap底层实现"></a>hashmap底层实现</h2><ol><li>数据结构：数据+链表+红黑树， 链表达到一定长度后会转为红黑树</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>占位符替换方式</title>
      <link href="/2024/02/27/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%9B%BF%E6%8D%A2%E6%96%B9%E5%BC%8F/"/>
      <url>/2024/02/27/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%9B%BF%E6%8D%A2%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="apache-commons-text"><a href="#apache-commons-text" class="headerlink" title="apache.commons.text"></a>apache.commons.text</h1><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><dependencies>    <dependency>        <groupId>org.apache.commons</groupId>        <artifactId>commons-text</artifactId>        <version>1.6</version>    </dependency></dependencies><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.text.StringSubstitutor;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">parseFormat</span><span class="hljs-params">(String text, Map&lt;String, Object&gt; param)</span>&#123;<br>      <span class="hljs-type">StringSubstitutor</span> <span class="hljs-variable">sub</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringSubstitutor</span>(param);<br>      <span class="hljs-type">String</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> sub.replace(text);<br>      System.err.println(context);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//text = $&#123;userName&#125; 你好, 申请密码已经变更</span><br><span class="hljs-comment">//param = &#123;&quot;userName&quot;:&quot;xuyongqing&quot;&#125;</span><br><br><span class="hljs-comment">//输出结果：xuyongqing 你好, 申请密码已经变更</span><br></code></pre></td></tr></table></figure><h2 id="基本方式"><a href="#基本方式" class="headerlink" title="基本方式"></a>基本方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 模板解析</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> template   模板字符串 如：My name is $&#123;name&#125;, i am $&#123;age&#125; years old! $&#123;sayHai&#125;</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> properties map接口的集合，如： &#123;name: &quot;azi&quot;, age: 18, sex: &quot;man&quot;&#125;</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span>: 解析后的字符串，如： My name is azi, i am 18 years old!</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@author</span>: 若非</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@date</span>: 2021/8/19 3:03</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">parseTemplate</span><span class="hljs-params">(String template, Map properties)</span> &#123;<br>    <span class="hljs-keyword">if</span> (template == <span class="hljs-literal">null</span> || template.isEmpty() || properties == <span class="hljs-literal">null</span>) &#123;<br>      <span class="hljs-keyword">return</span> template;<br>    &#125;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;\\$\\&#123;([^\\&#125;]+)\\&#125;&quot;</span>;<br>    <span class="hljs-type">Pattern</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> Pattern.compile(r);<br>    <span class="hljs-type">Matcher</span> <span class="hljs-variable">matcher</span> <span class="hljs-operator">=</span> pattern.matcher(template);<br>    <span class="hljs-keyword">while</span> (matcher.find()) &#123;<br>      <span class="hljs-type">String</span> <span class="hljs-variable">group</span> <span class="hljs-operator">=</span> matcher.group();<br>      <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> properties.get(group.replaceAll(r, <span class="hljs-string">&quot;$1&quot;</span>));<br>      <span class="hljs-keyword">if</span> (o != <span class="hljs-literal">null</span>) &#123;<br>        template = template.replace(group, String.valueOf(o));<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        template = template.replace(group, <span class="hljs-string">&quot;&quot;</span>);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> template;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> commons-text </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大连游玩项目</title>
      <link href="/2024/02/20/%E6%90%9E%E7%AC%91%E6%AE%B5%E5%AD%90/%E5%A4%A7%E8%BF%9E%E7%BA%A6%E4%BC%9A%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/02/20/%E6%90%9E%E7%AC%91%E6%AE%B5%E5%AD%90/%E5%A4%A7%E8%BF%9E%E7%BA%A6%E4%BC%9A%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="暂定大连游玩项目"><a href="#暂定大连游玩项目" class="headerlink" title="暂定大连游玩项目"></a>暂定大连游玩项目</h1><ul><li>看电影(大连商场 6楼)<ul><li>热辣滚烫</li><li>第二十条</li><li>飞驰人生2</li></ul></li><li>劳动公园<ul><li>看灯</li></ul></li><li>晚上：海底捞(大连商场店)</li></ul><h2 id="以后有机会"><a href="#以后有机会" class="headerlink" title="以后有机会"></a>以后有机会</h2><ul><li>地址：大连老虎滩海洋公园</li><li></li><li>地址：熊洞街</li><li>地址：春柳冰山慧谷C1栋<ul><li>项目：探索星河光影艺术馆</li></ul></li><li>地址：星海游乐场</li><li>地址：中山广场</li><li>地址：渔人码头</li><li>地址：大连美术馆</li><li>地址：俄罗斯风情街</li><li>地址：棠梨乐游谷</li><li>地址：莲花山观景台</li><li></li><li>劳动公园<ul><li>富思特索道</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 大连 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搞笑段子</title>
      <link href="/2024/01/29/%E6%90%9E%E7%AC%91%E6%AE%B5%E5%AD%90/%E6%90%9E%E7%AC%91%E6%AE%B5%E5%AD%90/"/>
      <url>/2024/01/29/%E6%90%9E%E7%AC%91%E6%AE%B5%E5%AD%90/%E6%90%9E%E7%AC%91%E6%AE%B5%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<ul><li>我现在最大的愿望就是能找个好老婆，我可以啥事都让着她，让她洗碗，让她做饭，让她洗衣服……</li></ul>]]></content>
      
      
      <categories>
          
          <category> 搞笑段子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> init-project </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GBase</title>
      <link href="/2023/09/11/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/gbase/"/>
      <url>/2023/09/11/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/gbase/</url>
      
        <content type="html"><![CDATA[<h1 id="GBase"><a href="#GBase" class="headerlink" title="GBase"></a>GBase</h1><h2 id="客户端工具"><a href="#客户端工具" class="headerlink" title="客户端工具"></a>客户端工具</h2><p>链接：<a href="https://pan.baidu.com/s/1K80jHrb88_yA_f4_1FVZEA">https://pan.baidu.com/s/1K80jHrb88_yA_f4_1FVZEA</a><br>提取码：d2rb </p><h2 id="客户端工具使用GBase方式"><a href="#客户端工具使用GBase方式" class="headerlink" title="客户端工具使用GBase方式"></a>客户端工具使用GBase方式</h2><p><a href="https://blog.csdn.net/ilovefaust/article/details/133296295">https://blog.csdn.net/ilovefaust/article/details/133296295</a></p><h2 id="jar地址"><a href="#jar地址" class="headerlink" title="jar地址"></a>jar地址</h2><p>链接：<a href="https://pan.baidu.com/s/1kiH0wRr6pgjy-pWJpBTOVQ">https://pan.baidu.com/s/1kiH0wRr6pgjy-pWJpBTOVQ</a><br>提取码：qp29 </p><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><ul><li>to_char(column) 将字段类型转为字符串</li><li>gbase_to_char(datetime, ‘%Y-%m-%s’) 将时间格式化</li><li>to_date(‘datetime’, ‘YYYY-MM-DD’) 将其他类型时间转为为指定时间格式 ,’HH24:MI:SS’</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--分组后排序</span><br><span class="hljs-keyword">select</span> <br>column1, <span class="hljs-built_in">max</span>(column2) column2<br><span class="hljs-keyword">from</span> <span class="hljs-keyword">table</span> <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> column1<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> column2;<br><br><br><span class="hljs-comment">--支持子查询</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> GBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="/2023/09/11/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/"/>
      <url>/2023/09/11/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/</url>
      
        <content type="html"><![CDATA[<h3 id="行转列"><a href="#行转列" class="headerlink" title="行转列"></a>行转列</h3><p>表名 student 字段 name,age<br>现有数据十条</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>A</td><td>10</td></tr><tr><td>B</td><td>11</td></tr><tr><td>C</td><td>12</td></tr><tr><td>D</td><td>13</td></tr><tr><td>E</td><td>14</td></tr><tr><td>F</td><td>15</td></tr><tr><td>G</td><td>16</td></tr><tr><td>H</td><td>17</td></tr><tr><td>I</td><td>18</td></tr><tr><td>J</td><td>19</td></tr></tbody></table><p>最终呈现效果</p><table><thead><tr><th>name</th><th>age</th><th>name1</th><th>age1</th></tr></thead><tbody><tr><td>J</td><td>19</td><td>E</td><td>14</td></tr><tr><td>I</td><td>18</td><td>D</td><td>13</td></tr><tr><td>H</td><td>17</td><td>C</td><td>12</td></tr><tr><td>G</td><td>16</td><td>B</td><td>11</td></tr><tr><td>F</td><td>15</td><td>A</td><td>10</td></tr></tbody></table><p>代码展示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&lt;</span> <span class="hljs-number">6</span> <span class="hljs-keyword">THEN</span> c.`name` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `name`,<br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&lt;</span> <span class="hljs-number">6</span> <span class="hljs-keyword">THEN</span> c.`age` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `age`,<br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&gt;</span> <span class="hljs-number">5</span> <span class="hljs-keyword">THEN</span> c.`name` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `name1`,<br><span class="hljs-built_in">max</span>( <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> c.rw <span class="hljs-operator">&gt;</span> <span class="hljs-number">5</span> <span class="hljs-keyword">THEN</span> c.`age` <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span> ) `age1` <br><span class="hljs-keyword">FROM</span><br>(<br><span class="hljs-keyword">SELECT</span><br>a.`name`,<br>a.`age`,<br>( <span class="hljs-variable">@rownum</span> :<span class="hljs-operator">=</span> <span class="hljs-variable">@rownum</span> <span class="hljs-operator">+</span> <span class="hljs-number">1</span> ) rw,<br>( <span class="hljs-variable">@rownum</span> <span class="hljs-operator">%</span> <span class="hljs-number">5</span> ) rn <br><span class="hljs-keyword">FROM</span><br>( <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student a <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> age <span class="hljs-keyword">DESC</span> LIMIT <span class="hljs-number">10</span> ) a,<br>( <span class="hljs-keyword">SELECT</span> <span class="hljs-variable">@rownum</span> :<span class="hljs-operator">=</span> <span class="hljs-number">0</span> ) b <br>) c #### 前提条件<br><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span><br>c.rn <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span><br>c.rw<br></code></pre></td></tr></table></figure><p><img src="/./images/mysql/image-20230912112554648.png" alt="image-20230912112554648"></p><p><img src="/images/mysql/image-20230912112604334.png" alt="image-20230912112604334"></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hutool</title>
      <link href="/2023/09/11/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/hutool/"/>
      <url>/2023/09/11/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/hutool/</url>
      
        <content type="html"><![CDATA[<h4 id="字符串判空"><a href="#字符串判空" class="headerlink" title="字符串判空"></a>字符串判空</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isNotBlank</span><span class="hljs-params">(Strig str)</span>&#123;<br>        <span class="hljs-keyword">return</span> StrUtil.isNotBlank(str);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="分片"><a href="#分片" class="headerlink" title="分片"></a>分片</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Integer</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">500</span>;<br>    <br>    Consumer&lt;List&lt;String&gt;&gt; consumer = CollectionUtil::isEmpty;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">partition</span><span class="hljs-params">(List&lt;String&gt; dataList)</span>&#123;<br>        ListUtil.partition(dataList, count).forEach(consumer);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hutool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MallChat</title>
      <link href="/2023/08/29/xuyongqing/github/MallChat/"/>
      <url>/2023/08/29/xuyongqing/github/MallChat/</url>
      
        <content type="html"><![CDATA[<h1 id="MallChat"><a href="#MallChat" class="headerlink" title="MallChat"></a><a href="https://github.com/zongzibinbin/MallChat">MallChat</a></h1><h2 id="禁止"><a href="#禁止" class="headerlink" title="禁止"></a>禁止</h2><ol><li>禁止在代码中出现 return fail info</li><li>禁止在代码中出现魔法数值</li></ol><h2 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h2><p>具体代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/msg&quot;)</span><br><span class="hljs-meta">@ApiOperation(&quot;发送消息&quot;)</span><br><span class="hljs-meta">@FrequencyControl(time = 5, count = 3, target = FrequencyControl.Target.UID)</span><br><span class="hljs-meta">@FrequencyControl(time = 30, count = 5, target = FrequencyControl.Target.UID)</span><br><span class="hljs-meta">@FrequencyControl(time = 60, count = 10, target = FrequencyControl.Target.UID)</span><br><span class="hljs-keyword">public</span> ApiResult&lt;ChatMessageResp&gt; <span class="hljs-title function_">sendMsg</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> <span class="hljs-meta">@RequestBody</span> ChatMessageReq request)</span> &#123;<span class="hljs-comment">//todo 发送给单聊</span><br><span class="hljs-type">Long</span> <span class="hljs-variable">msgId</span> <span class="hljs-operator">=</span> chatService.sendMsg(request, RequestHolder.get().getUid());<br><span class="hljs-comment">//返回完整消息格式，方便前端展示</span><br><span class="hljs-keyword">return</span> ApiResult.success(chatService.getMsgResp(msgId, RequestHolder.get().getUid()));<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h3><ol><li><a href="#%E9%A2%91%E6%8E%A7">频控</a></li><li>在登录过程中将用户信息存放打ThreadLocal中后，通过ReqyestHolder.get()方法获取<ol><li>实现方式 继承 HandlerInterceptor 重写 preHandle() 和 afterCompletion()方法</li><li>实现 WebMvcConfiguration 重写 addInterceptors 将 step1的类 加入到 InterceptorRegistry</li></ol></li></ol><h4 id="发送消息具体处理"><a href="#发送消息具体处理" class="headerlink" title="发送消息具体处理"></a>发送消息具体处理</h4><p>具体代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 发送消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> Long <span class="hljs-title function_">sendMsg</span><span class="hljs-params">(ChatMessageReq request, Long uid)</span> &#123;<br>    check(request, uid);<br>    <span class="hljs-type">AbstractMsgHandler</span> <span class="hljs-variable">msgHandler</span> <span class="hljs-operator">=</span> MsgHandlerFactory.getStrategyNoNull(request.getMsgType());<span class="hljs-comment">//todo 这里先不扩展，后续再改</span><br>    msgHandler.checkMsg(request, uid);<br>    <span class="hljs-comment">//同步获取消息的跳转链接标题</span><br>    <span class="hljs-type">Message</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> MessageAdapter.buildMsgSave(request, uid);<br>    messageDao.save(insert);<br>    msgHandler.saveMsg(insert, request);<br>    <span class="hljs-comment">//发布消息发送事件</span><br>    applicationEventPublisher.publishEvent(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MessageSendEvent</span>(<span class="hljs-built_in">this</span>, insert.getId()));<br>    <span class="hljs-keyword">return</span> insert.getId();<br>&#125;<br></code></pre></td></tr></table></figure><p>代码解释</p><ol><li><p>MsgHandlerFactory.getStrategyNoNull(request.getMsgType())</p><ol><li>具体实现方法是通过 具体的消息利用spring注入实例化的方式，将</li></ol></li><li><p>发布消息发送事件</p><ol><li><p>利用spring 事件发布</p></li><li><p>MessageSendEvent 需要继承 ApplicationEvent</p></li><li><p>对应方法需要这么使用 </p><ol><li><pre><code class="java">@TransactionalEventListener(phase = TransactionPhase.BEFORE_COMMIT, classes = MessageSendEvent.class, fallbackExecution = true)    public void messageRoute(MessageSendEvent event) &#123;        Long msgId = event.getMsgId();        mqProducer.sendSecureMsg(MQConstant.SEND_MSG_TOPIC, new MsgSendMessageDTO(msgId), msgId);    &#125;</code></pre></li></ol></li></ol></li></ol><h2 id="频控"><a href="#频控" class="headerlink" title="频控"></a>频控</h2><p>解释：控制访问次数</p><h3 id="1-注解"><a href="#1-注解" class="headerlink" title="1.注解"></a>1.注解</h3>]]></content>
      
      
      
        <tags>
            
            <tag> Github开源项目MallChat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring</title>
      <link href="/2023/08/21/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/spring/"/>
      <url>/2023/08/21/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/spring/</url>
      
        <content type="html"><![CDATA[<h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><h3 id="使用-Builder"><a href="#使用-Builder" class="headerlink" title="使用@Builder"></a>使用@Builder</h3><ol><li>必须同时使用 @NoArgsConstructor，@AllArgsConstructor</li><li>类命.buider() 之后换行， .build(); 必须在最后一行</li></ol><h1 id="spring-event"><a href="#spring-event" class="headerlink" title="spring - event"></a>spring - event</h1><h2 id="ApplicationEventPublisher"><a href="#ApplicationEventPublisher" class="headerlink" title="ApplicationEventPublisher"></a>ApplicationEventPublisher</h2><h3 id="前景"><a href="#前景" class="headerlink" title="前景"></a>前景</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageSendEvent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ApplicationEvent</span> &#123;<br>    <span class="hljs-keyword">private</span> Long msgId;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MessageSendEvent</span><span class="hljs-params">(Object source, Long msgId)</span> &#123;<br>        <span class="hljs-built_in">super</span>(source);<br>        <span class="hljs-built_in">this</span>.msgId = msgId;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ApplicationEventPublisher applicationEventPublisher;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">method</span><span class="hljs-params">()</span>&#123;<br>        applicationEventPublisher.publishEvent(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MessageSendEvent</span>(<span class="hljs-built_in">this</span>, insert.getId()));<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>    <span class="hljs-meta">@TransactionalEventListener(classes = MessageSendEvent.class, fallbackExecution = true)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">messageRoute</span><span class="hljs-params">(MessageSendEvent event)</span> &#123;<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="spring-transaction"><a href="#spring-transaction" class="headerlink" title="spring - transaction"></a>spring - transaction</h1><h2 id="判断当前代码中是否存在事务未提交"><a href="#判断当前代码中是否存在事务未提交" class="headerlink" title="判断当前代码中是否存在事务未提交"></a>判断当前代码中是否存在事务未提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span>&#123;<br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">inTransaction</span> <span class="hljs-operator">=</span> TransactionSynchronizationManager.isActualTransactionActive();<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">messageRoute</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">//非事务状态，直接执行，不做任何保证。</span><br>        <span class="hljs-keyword">if</span> (!inTransaction) &#123;<br>            <span class="hljs-keyword">return</span> joinPoint.proceed();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="spring-aop"><a href="#spring-aop" class="headerlink" title="spring - aop"></a>spring - aop</h1><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(value = ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Idempotent &#123;<br><br>    String <span class="hljs-title function_">name</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    String <span class="hljs-title function_">field</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    Class <span class="hljs-title function_">type</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="切面类"><a href="#切面类" class="headerlink" title="切面类"></a>切面类</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Around;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Pointcut;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IdempotentAspect</span> &#123;<br><br>    <span class="hljs-meta">@Pointcut(&quot;@annotation(com.xuyongqing.annotations.Idempotent)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">idempotent</span><span class="hljs-params">()</span>&#123;<br><br>    &#125;<br>    <span class="hljs-meta">@Around(&quot;idempotent()&quot;)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">methodAround1</span><span class="hljs-params">(ProceedingJoinPoint joinPoint)</span> <span class="hljs-keyword">throws</span> Throwable&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.xuyongqing.annotations.Idempotent;<br><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Around;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IdempotentAspect</span> &#123;<br><br>    <span class="hljs-meta">@Around(&quot;@annotation(idempotent))</span><span class="hljs-string">&quot;)</span><br><span class="hljs-string">    public Object methodAround2(ProceedingJoinPoint joinPoint, Idempotent idempotent)&#123;</span><br><span class="hljs-string">        return null;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx</title>
      <link href="/2023/08/14/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/nginx/"/>
      <url>/2023/08/14/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="本地接口通过外网访问"><a href="#本地接口通过外网访问" class="headerlink" title="本地接口通过外网访问"></a>本地接口通过外网访问</h1><h2 id="查看nginx是否启动"><a href="#查看nginx是否启动" class="headerlink" title="查看nginx是否启动"></a>查看nginx是否启动</h2><h3 id="window环境下"><a href="#window环境下" class="headerlink" title="window环境下"></a>window环境下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist /fi <span class="hljs-string">&quot;imagename eq nginx.exe&quot;</span><br></code></pre></td></tr></table></figure><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>代理软件：可以代理本地接口能通过外网访问</li><li>nginx</li><li>本地服务</li></ol><h2 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h2><h3 id="本地接口通过外网访问-1"><a href="#本地接口通过外网访问-1" class="headerlink" title="本地接口通过外网访问"></a>本地接口通过外网访问</h3><ol><li>natapp 80 -&gt; 8080</li><li>nginx 8080 -&gt; 4000</li><li>本地启动 4000端口</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>    listen 8080;<br>    server_name your-domain.com;<br>    location / &#123;<br>        proxy_pass http://localhost:4000;<br>        proxy_set_header Host <span class="hljs-variable">$host</span>;<br>        proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="如何开启集群"><a href="#如何开启集群" class="headerlink" title="如何开启集群"></a>如何开启集群</h3><p>在下面的配置中，<code>upstream backend</code> 定义了一个名为 <code>backend</code> 的后端服务器集群，其中包含了多个服务器的地址和端口。你可以根据实际情况添加更多的后端服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">http &#123;<br>    upstream backend &#123;<br>        server 192.168.0.178:8081;<br>        server 192.168.0.179:8081;<br>        <span class="hljs-comment"># 添加更多的后端服务器地址和端口</span><br>    &#125;<br>    server &#123;<br>        listen 80;<br>        server_name your-domain.com;<br>        location / &#123;<br>            proxy_pass http://backend;<br>            proxy_set_header Host <span class="hljs-variable">$host</span>;<br>            proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Doris</title>
      <link href="/2023/08/14/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/Doris/"/>
      <url>/2023/08/14/xuyongqing/%E6%95%B0%E6%8D%AE%E5%BA%93/Doris/</url>
      
        <content type="html"><![CDATA[<h1 id="Doris"><a href="#Doris" class="headerlink" title="Doris"></a>Doris</h1><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a><a href="https://doris.apache.org/zh-CN/docs/dev/get-starting/quick-start/">Getting Started</a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> doris </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LocalDate</title>
      <link href="/2023/08/11/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/LocalDate/"/>
      <url>/2023/08/11/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/LocalDate/</url>
      
        <content type="html"><![CDATA[<h1 id="LocalDateTime"><a href="#LocalDateTime" class="headerlink" title="LocalDateTime"></a>LocalDateTime</h1><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">DateTimeFormatter</span> <span class="hljs-variable">format</span> <span class="hljs-operator">=</span> DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>);<br>        <span class="hljs-type">LocalDate</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2022-01-01&quot;</span>,format);<br>        <span class="hljs-type">LocalDate</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2022-01-01&quot;</span>, format);<br>        <br>        System.err.println(a.isBefore(b));<br>        System.err.println(a.isAfter(b));<br>        System.err.println(a.isEqual(b));<br>    &#125;<br>&#125;<br><span class="hljs-comment">//结果打印</span><br><span class="hljs-comment">//false</span><br><span class="hljs-comment">//false</span><br><span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java8特性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stream</title>
      <link href="/2023/08/11/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/Stream/"/>
      <url>/2023/08/11/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/Stream/</url>
      
        <content type="html"><![CDATA[<h1 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h1><h2 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">DateTimeFormatter</span> <span class="hljs-variable">dateTimeFormatter</span> <span class="hljs-operator">=</span> DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>);<br>        <span class="hljs-type">LocalDate</span> <span class="hljs-variable">beginLocalDate</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2022-01-01&quot;</span>, dateTimeFormatter);<br>        <span class="hljs-type">LocalDate</span> <span class="hljs-variable">endLocalDate</span> <span class="hljs-operator">=</span> LocalDate.parse(<span class="hljs-string">&quot;2023-12-31&quot;</span>, dateTimeFormatter);<br><br>        List&lt;YearMonthDayDTO&gt; yearMonthDayDTOList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>        <span class="hljs-keyword">while</span> (beginLocalDate.isBefore(endLocalDate))&#123;<br>            beginLocalDate.format(DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>));<br><br>            <span class="hljs-type">YearMonthDayDTO</span> <span class="hljs-variable">yearMonthDayDTO</span> <span class="hljs-operator">=</span> YearMonthDayDTO<br>                    .builder()<br>                    .year(String.valueOf(beginLocalDate.getYear()))<br>                    .month(String.valueOf(beginLocalDate.getMonth().getValue()))<br>                    .day(String.valueOf(beginLocalDate.getDayOfMonth()))<br>                    .build();<br>            yearMonthDayDTOList.add(yearMonthDayDTO);<br><br>            beginLocalDate = beginLocalDate.plusDays(<span class="hljs-number">1</span>);<br>        &#125;<br>        <br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        Map&lt;String, Set&lt;String&gt;&gt; monthDayMap = yearMonthDayDTOList.stream().collect(Collectors.groupingBy(YearMonthDayDTO::getMonth, Collectors.collectingAndThen(Collectors.toSet(), list -&gt; list.stream().filter(obj -&gt; Integer.valueOf(obj.getDay()) &lt; <span class="hljs-number">2</span>).map(YearMonthDayDTO::getDay).collect(Collectors.toSet()))));<br>        yearMonthDayDTOList.stream().collect(Collectors.groupingBy(YearMonthDayDTO::getMonth, Collectors.mapping(Function.identity(), Collectors.toSet())));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Collectors-collectingAndThen"><a href="#Collectors-collectingAndThen" class="headerlink" title="Collectors.collectingAndThen"></a>Collectors.collectingAndThen</h3><p>解释：对已经收集起来的数据进行处理</p><h3 id="Collectors-mapping"><a href="#Collectors-mapping" class="headerlink" title="Collectors.mapping"></a>Collectors.mapping</h3><p>解释：对正在收集的数据进行处理</p>]]></content>
      
      
      
        <tags>
            
            <tag> java8特性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rpc</title>
      <link href="/2023/08/07/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E8%87%AA%E5%AE%9A%E4%B9%89rpc%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/08/07/xuyongqing/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3/%E8%87%AA%E5%AE%9A%E4%B9%89rpc%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>1.自定义扫描注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@Import(CustomScannerRegistrar.class)</span><br><span class="hljs-meta">@Documented</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RpcScan &#123;<br><br>    String[] basePackage();<br><br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xxl-job</title>
      <link href="/2023/08/01/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/XXL-JOB/"/>
      <url>/2023/08/01/xuyongqing/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/XXL-JOB/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/xuxueli/xxl-job.git">XXL-JOB</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        Map&lt;Method, XxlJob&gt; annotatedMethods = <span class="hljs-literal">null</span>;   <span class="hljs-comment">// referred to ：org.springframework.context.event.EventListenerMethodProcessor.processBean</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            annotatedMethods = MethodIntrospector.selectMethods(bean.getClass(),<br>                    <span class="hljs-keyword">new</span> <span class="hljs-title class_">MethodIntrospector</span>.MetadataLookup&lt;XxlJob&gt;() &#123;<br>                        <span class="hljs-meta">@Override</span><br>                        <span class="hljs-keyword">public</span> XxlJob <span class="hljs-title function_">inspect</span><span class="hljs-params">(Method method)</span> &#123;<br>                            <span class="hljs-keyword">return</span> AnnotatedElementUtils.findMergedAnnotation(method, XxlJob.class);<br>                        &#125;<br>                    &#125;);<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br>            logger.error(<span class="hljs-string">&quot;xxl-job method-jobhandler resolve error for bean[&quot;</span> + beanDefinitionName + <span class="hljs-string">&quot;].&quot;</span>, ex);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (annotatedMethods==<span class="hljs-literal">null</span> || annotatedMethods.isEmpty()) &#123;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-comment">// generate and regist method job handler</span><br>        <span class="hljs-keyword">for</span> (Map.Entry&lt;Method, XxlJob&gt; methodXxlJobEntry : annotatedMethods.entrySet()) &#123;<br>            <span class="hljs-type">Method</span> <span class="hljs-variable">executeMethod</span> <span class="hljs-operator">=</span> methodXxlJobEntry.getKey();<br>            <span class="hljs-type">XxlJob</span> <span class="hljs-variable">xxlJob</span> <span class="hljs-operator">=</span> methodXxlJobEntry.getValue();<br>            <span class="hljs-comment">// regist</span><br>            registJobHandler(xxlJob, bean, executeMethod);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式定时任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/26/Hexo%E5%BA%94%E7%94%A8/hello-world/"/>
      <url>/2023/07/26/Hexo%E5%BA%94%E7%94%A8/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 初始工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> init-project </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
