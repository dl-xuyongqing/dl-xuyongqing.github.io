<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>How to use LocalDateTime</title>
    <link href="/2023/08/11/how-use-LocalDateTime/"/>
    <url>/2023/08/11/how-use-LocalDateTime/</url>
    
    <content type="html"><![CDATA[<h1 id="LocalDateTime"><a href="#LocalDateTime" class="headerlink" title="LocalDateTime"></a>LocalDateTime</h1><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DateTimeFormatter</span> <span class="variable">format</span> <span class="operator">=</span> DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">a</span> <span class="operator">=</span> LocalDate.parse(<span class="string">&quot;2022-01-01&quot;</span>,format);</span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">b</span> <span class="operator">=</span> LocalDate.parse(<span class="string">&quot;2022-01-01&quot;</span>, format);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.err.println(a.isBefore(b));</span><br><span class="line">System.err.println(a.isAfter(b));</span><br><span class="line">System.err.println(a.isEqual(b));</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果打印</span></span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>How to use Stream</title>
    <link href="/2023/08/11/use-stream-way/"/>
    <url>/2023/08/11/use-stream-way/</url>
    
    <content type="html"><![CDATA[<h1 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h1><h2 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DateTimeFormatter</span> <span class="variable">dateTimeFormatter</span> <span class="operator">=</span> DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">beginLocalDate</span> <span class="operator">=</span> LocalDate.parse(<span class="string">&quot;2022-01-01&quot;</span>, dateTimeFormatter);</span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">endLocalDate</span> <span class="operator">=</span> LocalDate.parse(<span class="string">&quot;2023-12-31&quot;</span>, dateTimeFormatter);</span><br><span class="line"></span><br><span class="line">List&lt;YearMonthDayDTO&gt; yearMonthDayDTOList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (beginLocalDate.isBefore(endLocalDate))&#123;</span><br><span class="line">    beginLocalDate.format(DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="type">YearMonthDayDTO</span> <span class="variable">yearMonthDayDTO</span> <span class="operator">=</span> YearMonthDayDTO</span><br><span class="line">        .builder()</span><br><span class="line">        .year(String.valueOf(beginLocalDate.getYear()))</span><br><span class="line">        .month(String.valueOf(beginLocalDate.getMonth().getValue()))</span><br><span class="line">        .day(String.valueOf(beginLocalDate.getDayOfMonth()))</span><br><span class="line">        .build();</span><br><span class="line">    yearMonthDayDTOList.add(yearMonthDayDTO);</span><br><span class="line"></span><br><span class="line">    beginLocalDate = beginLocalDate.plusDays(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Set&lt;String&gt;&gt; monthDayMap = yearMonthDayDTOList.stream().collect(Collectors.groupingBy(YearMonthDayDTO::getMonth, Collectors.collectingAndThen(Collectors.toSet(), list -&gt; list.stream().filter(obj -&gt; Integer.valueOf(obj.getDay()) &lt; <span class="number">2</span>).map(YearMonthDayDTO::getDay).collect(Collectors.toSet()))));</span><br><span class="line"></span><br><span class="line">        yearMonthDayDTOList.stream().collect(Collectors.groupingBy(YearMonthDayDTO::getMonth, Collectors.mapping(Function.identity(), Collectors.toSet())));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Collectors-collectingAndThen"><a href="#Collectors-collectingAndThen" class="headerlink" title="Collectors.collectingAndThen"></a>Collectors.collectingAndThen</h3><p>​解释：对已经收集起来的数据进行处理</p><h3 id="Collectors-mapping"><a href="#Collectors-mapping" class="headerlink" title="Collectors.mapping"></a>Collectors.mapping</h3><p>​解释：对正在收集的数据进行处理</p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>阅读源码</title>
    <link href="/2023/08/07/%E9%98%85%E8%AF%BB%E6%BA%90%E7%A0%81/"/>
    <url>/2023/08/07/%E9%98%85%E8%AF%BB%E6%BA%90%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<ol><li>@DubboComponentScan<ol><li>@Import(DubboComponentScanRegistrar.class)<ol><li>DubboComponentScanRegistrar implements ImportBeanDefinitionRegistrar<ol><li>Overrid public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry);<ol><li>AnnotationAttributes attributes &#x3D; AnnotationAttributes.fromMap( metadata.getAnnotationAttributes( <strong>DubboComponentScan</strong>.class.getName()));</li><li></li></ol></li><li></li></ol></li></ol></li></ol></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>源码</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>rpc-learn</title>
    <link href="/2023/08/07/rpc-learn/"/>
    <url>/2023/08/07/rpc-learn/</url>
    
    <content type="html"><![CDATA[<p>1.自定义扫描注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Import(CustomScannerRegistrar.class)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RpcScan &#123;</span><br><span class="line"></span><br><span class="line">    String[] basePackage();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learn</title>
    <link href="/2023/08/07/Learn/"/>
    <url>/2023/08/07/Learn/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>XXL-JOB</title>
    <link href="/2023/08/07/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/XXL-JOB/"/>
    <url>/2023/08/07/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/XXL-JOB/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/xuxueli/xxl-job.git">XXL-JOB</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Method, XxlJob&gt; annotatedMethods = <span class="literal">null</span>;   <span class="comment">// referred to ：org.springframework.context.event.EventListenerMethodProcessor.processBean</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                annotatedMethods = MethodIntrospector.selectMethods(bean.getClass(),</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">MethodIntrospector</span>.MetadataLookup&lt;XxlJob&gt;() &#123;</span><br><span class="line">                            <span class="meta">@Override</span></span><br><span class="line">                            <span class="keyword">public</span> XxlJob <span class="title function_">inspect</span><span class="params">(Method method)</span> &#123;</span><br><span class="line">                                <span class="keyword">return</span> AnnotatedElementUtils.findMergedAnnotation(method, XxlJob.class);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">                logger.error(<span class="string">&quot;xxl-job method-jobhandler resolve error for bean[&quot;</span> + beanDefinitionName + <span class="string">&quot;].&quot;</span>, ex);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (annotatedMethods==<span class="literal">null</span> || annotatedMethods.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// generate and regist method job handler</span></span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;Method, XxlJob&gt; methodXxlJobEntry : annotatedMethods.entrySet()) &#123;</span><br><span class="line">                <span class="type">Method</span> <span class="variable">executeMethod</span> <span class="operator">=</span> methodXxlJobEntry.getKey();</span><br><span class="line">                <span class="type">XxlJob</span> <span class="variable">xxlJob</span> <span class="operator">=</span> methodXxlJobEntry.getValue();</span><br><span class="line">                <span class="comment">// regist</span></span><br><span class="line">                registJobHandler(xxlJob, bean, executeMethod);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>定时任务</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/26/%E5%B7%A5%E7%A8%8B%E5%88%9D%E5%A7%8B%E5%8C%96/hello-world/"/>
    <url>/2023/07/26/%E5%B7%A5%E7%A8%8B%E5%88%9D%E5%A7%8B%E5%8C%96/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>初始工程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
